plugins {
    id 'fabric-loom' version '0.7-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
archivesBaseName = projectDir.getName() + "-[Fabric]-" + project.minecraft_version
version = project.mod_version
group = project.maven_group

dependencies {
    //to change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

processResources {
    inputs.property "version", project.version

    //from(sourceSets.main.resources.srcDirs) {
    //    include "fabric.mod.json"
    //    expand "version": project.version
    //}

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

jar {
    from "LICENSE"
}

// Runs batch script to auto copy mod to mods folder on local on dedicated server
// and then start minecraft locally and start the dedicated minecraft server
task runDedicatedTest(type: Exec, dependsOn: check) {
    commandLine 'cmd', '/c', "..\\BuildUtility.bat" +
            " " + projectDir.getName() + " " + archivesBaseName + "-" + project.mod_version + ".jar"
}
build.dependsOn runDedicatedTest
